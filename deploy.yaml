name: Java CI/CD Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      # SharePoint Configuration
      SHAREPOINT_SITE_NAME: ${{ secrets.SHAREPOINT_SITE_NAME }}
      SHAREPOINT_TENANT_ID: ${{ secrets.SHAREPOINT_TENANT_ID }}
      SHAREPOINT_CLIENT_ID: ${{ secrets.SHAREPOINT_CLIENT_ID }}
      SHAREPOINT_CLIENT_SECRET: ${{ secrets.SHAREPOINT_CLIENT_SECRET }}
      SHAREPOINT_DRIVE_ID: ${{ secrets.SHAREPOINT_DRIVE_ID }}
      
      # Aprimo Configuration
      APRIMO_TOKEN_URL: ${{ secrets.APRIMO_TOKEN_URL }}
      APRIMO_CLIENT_ID: ${{ secrets.APRIMO_CLIENT_ID }}
      APRIMO_CLIENT_SECRET: ${{ secrets.APRIMO_CLIENT_SECRET }}
      APRIMO_UPLOAD_URL: ${{ secrets.APRIMO_UPLOAD_URL }}
      APRIMO_API_URL: ${{ secrets.APRIMO_API_URL }}
      APRIMO_CLASSIFICATION_ID: ${{ secrets.APRIMO_CLASSIFICATION_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Gets complete history for version calculations

      - name: Validate POM exists
        run: |
          if [ ! -f "pom.xml" ]; then
            echo "::error::pom.xml file not found!"
            exit 1
          fi

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'  # Caches Maven dependencies for faster builds

      - name: Build with Maven
        run: mvn -B clean package --file pom.xml
        env:
          MAVEN_OPTS: -Dhttps.protocols=TLSv1.2

      - name: Verify JAR creation
        run: |
          JAR_FILE=$(ls target/*.jar)
          if [ ! -f "$JAR_FILE" ]; then
            echo "::error::No JAR file was created!"
            exit 1
          fi
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: application-jar
          path: ${{ env.JAR_FILE }}

      - name: Deploy to Aprimo (Example)
        if: github.ref == 'refs/heads/main'  # Only deploy from main branch
        run: |
          # Example deployment command - replace with your actual deployment logic
          echo "Deploying ${{ env.JAR_FILE }} to Aprimo"
          # Your deployment commands here using the env variables
